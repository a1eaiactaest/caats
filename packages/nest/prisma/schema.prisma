datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["extendedWhereUnique", "fullTextSearch", "fullTextIndex", "metrics"]
}

/// Model that represents a user of the system.
model User {
    /// Internal user id
    id          String        @id @default(uuid()) @db.Uuid
    /// Mail provided by Google
    email       String        @unique
    /// User selected name
    name        String?
    /// Users profile picture
    picture     String?
    /// Superuser should be able to access all data and modify data accessors
    isSuperuser Boolean       @default(false)
    groups      String[]
    sessions    UserSession[]
}

model UserSession {
    accessToken String   @id
    user        User     @relation(fields: [userId], references: [id])
    userId      String   @db.Uuid
    userAgent   String?
    createdAt   DateTime @default(now())
}

enum TaskStatus {
    PENDING
    RUNNING
    SUCCESS
    SKIPPED
    FAILED
    OUTDATED
    CANCELLED
}

model Task {
    id          Int          @id @default(autoincrement())
    createdAt   DateTime     @default(now())
    finishedAt  DateTime?
    targetDate  DateTime
    initialHash String?
    finalHash   String?
    status      TaskStatus
    results     TaskResult[]

    @@index([createdAt(sort: Desc), targetDate(sort: Asc)])
}

model TaskResult {
    id        Int        @id @default(autoincrement())
    task      Task       @relation(fields: [taskId], references: [id], onDelete: Cascade)
    taskId    Int
    createdAt DateTime   @default(now())
    object    Json
    usedBy    TimetableEvent?

    @@index([taskId(sort: Desc), createdAt(sort: Desc)])
    @@index([object], type: Gin)
}

model TimetableEvent {
    id        Int             @id @default(autoincrement())
    createdAt DateTime        @default(now())
    startsAt  DateTime
    endsAt    DateTime
    source    TaskResult      @relation(fields: [sourceId], references: [id], onDelete: Cascade)
    sourceId  Int             @unique
    name      String
    code      String
    type      String
    room      String?
    groups    String[]
    hosts     String[]
}
